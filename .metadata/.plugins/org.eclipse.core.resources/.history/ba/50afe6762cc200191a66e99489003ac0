package baekjoon;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main1260 {
	static int[][] arr;
	static ArrayList<Integer> result;
	static boolean[] visit;
	static int n, m, v;
	static Queue<Integer> q;

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		n = sc.nextInt();
		m = sc.nextInt();
		v = sc.nextInt();
		arr = new int[n + 1][n + 1];

		for (int index = 0; index < m; index++) {
			int i = sc.nextInt();
			int j = sc.nextInt();
			arr[i][j] = 1;
			arr[j][i] = 1;
		}
		visit = new boolean[n + 1];
		result = new ArrayList<>();
		DFS(v);
		System.out.println(result);
		
		visit = new boolean[n + 1];
		result = new ArrayList<>();
		q = new LinkedList<>();
		BFS(v);
		System.out.println(result);
	}

	static void DFS(int v) {
		System.out.println(v);
		result.add(v);
		visit[v] = true;
		for (int i = 0; i < arr.length; i++) {
			if (!visit[i] && arr[v][i] == 1) {
				DFS(i);
			}
		}
	}

	static void BFS(int v) {
		result.add(v);
		visit[v] = true;
		for (int i = 0; i < arr.length; i++) {
			if(!visit[i] && arr[v][i] == 1) {
				q.add(arr[v][i]);
			}
		}
	}
}
